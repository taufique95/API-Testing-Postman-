{
	"info": {
		"_postman_id": "adfdf9a7-1717-4609-b462-13ebe4d1911a",
		"name": "StudentDetails_REST_API_Test_testingwroldpi",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "26162718"
	},
	"item": [
		{
			"name": "Create student",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"\r",
							"pm.environment.set(\"id\",jsonData.id)\r",
							"\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var first_name = pm.variables.replaceIn(\"{{$randomFirstName}}\")\r",
							"console.log(first_name);\r",
							"pm.environment.set(\"first_name\",first_name)\r",
							"\r",
							"var middle_name = pm.variables.replaceIn(\"{{$randomLastName}}\")\r",
							"console.log(middle_name);\r",
							"pm.environment.set(\"middle_name\",middle_name)\r",
							"\r",
							"var last_name = pm.variables.replaceIn(\"{{$randomNameSuffix}}\")\r",
							"console.log(last_name);\r",
							"pm.environment.set(\"last_name\",last_name)\r",
							"\r",
							"var date_of_birth = pm.variables.replaceIn(\"{{$randomDatePast}}\")\r",
							"console.log(date_of_birth);\r",
							"pm.environment.set(\"dob\",date_of_birth)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"first_name\": \"{{first_name}}\",\r\n    \"middle_name\": \"{{middle_name}}\",\r\n    \"last_name\": \"{{last_name}}\",\r\n    \"date_of_birth\": \"{{dob}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}/api/studentsDetails",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"api",
						"studentsDetails"
					]
				},
				"description": "**Create Data Sets Using the Dynamic Random Variables.** The response body will contain the following data for the created student:\n\n- Id\n- First Name\n- Middle name\n- Last name\n- Date of birth\n    \n\n**In the test case, needed to validate the following:**\n\n- Satus code\n    \n\n**NOTE: Only one student details can be created at a time.**"
			},
			"response": []
		},
		{
			"name": "Specific Student Details",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"First name validation\", function () {\r",
							"    pm.expect(jsonData.data.first_name).to.eql(pm.environment.get(\"first_name\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Middle name validation\", function () {\r",
							"    pm.expect(jsonData.data.middle_name).to.eql(pm.environment.get(\"middle_name\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Last name validation\", function () {\r",
							"    pm.expect(jsonData.data.last_name).to.eql(pm.environment.get(\"last_name\"));\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Birth Date validation\", function () {\r",
							"    pm.expect(jsonData.data.date_of_birth).to.eql(pm.environment.get(\"dob\"));\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseurl}}/api/studentsDetails/{{id}}",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"api",
						"studentsDetails",
						"{{id}}"
					]
				},
				"description": "Request to verify a specific student details by id generated by Dynamic Random Variable.\n\n**In the test case, needed to validate the following:**\n\n- Satus code\n- First name\n- Middle name\n- Last Name\n- Date of birth\n    \n\nEndFragm"
			},
			"response": []
		},
		{
			"name": "Create Technical Skills",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var language = [\r",
							"        \"German\",\r",
							"        \"Japanese\"\r",
							"    ];\r",
							"pm.environment.set(\"language\",language)\r",
							"console.log(language);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var yearexp = pm.variables.replaceIn('{{$randomInt}}');\r",
							"console.log(yearexp);\r",
							"pm.environment.set(\"yearexp\",yearexp)\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": 1,\r\n    \"language\": [\r\n        \"German\",\r\n        \"Japanese\"\r\n    ],\r\n    \"yearexp\": \"{{yearexp}}\",\r\n    \"lastused\": \"sample string 3\",\r\n    \"st_id\": {{id}}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}/api/technicalskills",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"api",
						"technicalskills"
					]
				},
				"description": "**Create Data Sets Using the Dynamic Random Variables.**\n\n**In the test case, needed to validate the following:**\n\n- Status code"
			},
			"response": []
		},
		{
			"name": "Create Student Address",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Status Test\", function () {\r",
							"    pm.expect(jsonData.status).to.eql(\"true\");\r",
							"});\r",
							"\r",
							"pm.test(\"Msg Field Test\", function () {\r",
							"    pm.expect(jsonData.msg).to.eql(\"Add  data success\");\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var House_Number = pm.variables.replaceIn(\"{{$randomStreetAddress}}\")\r",
							"console.log(House_Number);\r",
							"pm.environment.set(\"House_Number\",House_Number)\r",
							"\r",
							"var City = pm.variables.replaceIn(\"{{$randomCity}}\")\r",
							"console.log(City);\r",
							"pm.environment.set(\"City\",City)\r",
							"\r",
							"var State = pm.variables.replaceIn(\"{{$randomCountryCode}}\")\r",
							"console.log(State);\r",
							"pm.environment.set(\"State\",State)\r",
							"\r",
							"var Country = pm.variables.replaceIn(\"{{$randomCountry}}\")\r",
							"console.log(Country);\r",
							"pm.environment.set(\"Country\",Country);\r",
							"\r",
							"var Mobile = pm.variables.replaceIn(\"{{$randomPhoneNumber}}\")\r",
							"console.log(Mobile);\r",
							"pm.environment.set(\"Mobile1\",Mobile);\r",
							"\r",
							"var Mobile = pm.variables.replaceIn(\"{{$randomPhoneNumber}}\")\r",
							"console.log(Mobile);\r",
							"pm.environment.set(\"Mobile2\",Mobile);\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"Permanent_Address\": {\r\n        \"House_Number\": \"{{House_Number}}\",\r\n        \"City\": \"{{City}}\",\r\n        \"State\": \"{{State}}\",\r\n        \"Country\": \"{{Country}}\",\r\n        \"PhoneNumber\": [\r\n            {\r\n                \"Std_Code\": \"sample string 1\",\r\n                \"Home\": \"sample string 2\",\r\n                \"Mobile\": \"{{Mobile1}}\"\r\n            },\r\n            {\r\n                \"Std_Code\": \"sample string 1\",\r\n                \"Home\": \"sample string 2\",\r\n                \"Mobile\": \"{{Mobile2}}\"\r\n            }\r\n        ]\r\n    },\r\n    \"stId\": {{id}}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}/api//addresses",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"api",
						"",
						"addresses"
					]
				},
				"description": "**Create Data Sets Using the Dynamic Random Variables.**\n\n**The response body will contain the following informations:**\n\n  \n  \nStartFragment\n\n- House Number\n- City\n- State\n- Country\n- Phone numbers\n    \n\n**In the test case, needed to validate the following:**\n\nEndFragment\n\n- Status code"
			},
			"response": []
		},
		{
			"name": "Final Student Details",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Language\", function () {\r",
							"    pm.expect(jsonData.data.TechnicalDetails[0].language).to.eql(pm.environment.get(\"language\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Year of Experience\", function () {\r",
							"    pm.expect(jsonData.data.TechnicalDetails[0].yearexp).to.eql(pm.environment.get(\"yearexp\"));\r",
							"});\r",
							"\r",
							"pm.test(\"House Number Validation\", function () {\r",
							"    pm.expect(jsonData.data.Address[0].Permanent_Address.House_Number).to.eql(pm.environment.get(\"House_Number\"));\r",
							"});\r",
							"\r",
							"pm.test(\"City Validation\", function () {\r",
							"    pm.expect(jsonData.data.Address[0].Permanent_Address.City).to.eql(pm.environment.get(\"City\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Country Validation\", function () {\r",
							"    pm.expect(jsonData.data.Address[0].Permanent_Address.Country).to.eql(pm.environment.get(\"Country\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Current Address Validation\", function () {\r",
							"    pm.expect(jsonData.data.Address[0].Current_Address).to.eql(null);\r",
							"});\r",
							"\r",
							"pm.test(\"Mobile Number 1 Validation\", function () {\r",
							"    pm.expect(jsonData.data.Address[0].Permanent_Address.PhoneNumber[0].Mobile).to.eql(pm.environment.get(\"Mobile1\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Mobile Number 2 Validation\", function () {\r",
							"    pm.expect(jsonData.data.Address[0].Permanent_Address.PhoneNumber[1].Mobile).to.eql(pm.environment.get(\"Mobile2\"));\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseurl}}/api/FinalStudentDetails/{{id}}",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"api",
						"FinalStudentDetails",
						"{{id}}"
					]
				},
				"description": "In the test case you need to validate the following field values:\n\n- Status code\n- First Name\n- Middle Name\n- Last Name\n- Date of Birth\n- Language\n- Year Of Experience\n- Last Used Date\n- House Number\n- City\n- State\n- Country\n- Std Code\n- Home Address\n- Mobile"
			},
			"response": []
		},
		{
			"name": "Get student list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"console.log(jsonData.length)\r",
							"\r",
							"pm.test(\"Check Length\", function () {\r",
							"    pm.expect(jsonData.length).to.greaterThan(0);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseurl}}/api/studentsDetails",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"api",
						"studentsDetails"
					]
				},
				"description": "**Request to get the student list. The response body will contain the following data for each student:**\n\n- Id\n- First Name\n- Middle name\n- Last name\n- Date of birth\n    \n\n**In the test case, needed to validate the following:**\n\n- Status code\n- Length of the response"
			},
			"response": []
		}
	]
}